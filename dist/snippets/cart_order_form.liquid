<form class="order-form" id="clientOrderForm">
<input type="submit" class="btn full big-submit" value="{{ 'cart.checkout' | t }}" />
</form>

<div id="log"></div>

  <script>

    function buildOrder() {
        /* Customer datas */
      {% if customer.addresses_count > 0 %}

          var selector = $('#delivery_place_customer option:selected');
          if (selector) {
            
          }else{
            selector = $($('#delivery_place_customer option')[0]);

          }

              var company = selector.attr('data-company'),
              phone = selector.attr('data-phone'),
              address1 = selector.attr('data-address1'),
              address2 = selector.attr('data-address2'),
              zip = selector.attr('data-zip'),
              city = selector.attr('data-city'),
              country = 'France';

              if (company){
              company = selector.attr('data-company').replace(/[&]/gi,' and ').replace(/[#]/gi,'').replace(/[éëêè]/gi,'e').replace(/[,]/gi,'');
              };

              if (phone){
                phone = selector.attr('data-phone').replace(/[&]/gi,' and ').replace(/[#]/gi,'').replace(/[éëêè]/gi,'e').replace(/[,]/gi,'');
              };

              if (address2){
                address2 = selector.attr('data-address2').replace(/[&]/gi,' and ').replace(/[#]/gi,'').replace(/[éëêè]/gi,'e').replace(/[,]/gi,'');
              };

      {% else %}
          var company = '',
              phone = '',
              address1 = $('#address #street_number').val() + ' ' + $('#address #route').val(),
              address2 = '',
              zip = $('#address #postal_code').val(),
              city = $('#address #locality').val(),
              country = 'France';
      {% endif %}

         /* Cart datas */
        var cartTotalPrice = parseInt($('#cartTotal').attr('data-value')) / 100 ,
            cartSubTotalPrice = parseInt($('#cartSubTotal').attr('data-value')) / 100 ,
            cartTotalTax = parseInt($('#cartVAT').attr('data-value')) / 100,
            cartAttributes = CartJS.cart.attributes;

      	console.log(cartAttributes);


        /* Line Items */
        var orderItems = [];

          /* Cart Items */
          $.each(CartJS.cart.items, function (i, item) {
            var selector = $('#cartOrderDetails div[data-id="' + item.id + '"]'),
                tva_price = selector.attr('data-vat-price'),
                tva_rate = selector.attr('data-vat-rate'),
                barcode = selector.attr('data-barcode');


                var itemsProperties = [];
                  itemsProperties.push(
                    {
                      "product_name": item.properties._Plat1,
                      "product_sku": item.properties._component_sku_1,
                      "product_variant_id" : item.properties._component_id_1
                    },
                    {
                      "product_name": item.properties._Plat2,
                      "product_sku": item.properties._component_sku_2,
                      "product_variant_id" : item.properties._component_id_2
                    },
                    {
                      "product_name": item.properties._Plat3,
                      "product_sku": item.properties._component_sku_3,
                      "product_variant_id" : item.properties._component_id_3
                    },
                    {
                      "product_service_pour": item.properties.pour
                    }
                    );

                /*var itemsComponents = [];*/
            	/*$('#cartOrderDetails div[data-id="' + item.id + '"] .component').each(function(index) {
                  var name = $(this).attr('data-name'),
                      sku = $(this).attr('data-sku'),
                      varID = $(this).attr('data-comp-id');
                  itemsComponents.push(
                    {
                      "product_name": name,
                      "product_sku": sku,
                      "product_quantity":item.quantity,
                      "product_variant_id" : varID
                    }
                  );
                });*/


           orderItems.push(
             {
               "variant_id": item.id,
               "title": item.product_title,
               "quantity": item.quantity,
               "price": parseInt(item.price)/100,
               "sku": item.sku,
               "barcode":barcode,
               "variant_title": item.title,
               "vendor": item.vendor,
               "type": item.product_type,
               "product_id": item.product_id,
               "properties": itemsProperties,
               "tax_lines":[{"title":"TVA","price":tva_price,"rate":tva_rate}]/*,
               "bundle_components":
                 itemsComponents*/
             }

           );

          });

		/* Order Object */
        var order = [];
        order.push(
          {
              "email":{{ customer.email | json }},
              "total_price":cartTotalPrice,
              "subtotal_price":cartSubTotalPrice,
              "total_tax":cartTotalTax,
              "financial_status":"pending",
              "source": "Proxy",
              "note_attributes":[
                  cartAttributes
              ],
              "line_items":
                  orderItems
              ,
              "customer":{"id":{{ customer.id | json }}},
              "shipping_address":{
                  "address1":address1.replace(/[&]/gi,' and ').replace(/[#]/gi,'').replace(/[éëêè]/gi,'e').replace(/[,]/gi,''),
                  "phone":phone,
                  "city":city.replace(/[&]/gi,' and ').replace(/[#]/gi,'').replace(/[éëêè]/gi,'e').replace(/[,]/gi,''),
                  "zip":zip.replace(/[&]/gi,' and ').replace(/[#]/gi,'').replace(/[éëêè]/gi,'e').replace(/[,]/gi,''),
                  "country":country,
                  "address2":address2,
                  "company":company,
                  "name":{{ customer.name | json }}
              }
          }
        );


      var orderJSON = 'orderJSON='+JSON.stringify(order);
      //$("#log").append(orderJSON);
      // console.log(order);



        $.ajax({
          url: "/apps/new-order",
          data: orderJSON,
          type: "GET",
          crossDomain:true,
          contentType: "application/json;charset=UTF-8",
          dataType: 'json',
          beforeSend: function(){
            //$('#overlay').empty().append('<div id="feedback"><h2 class="text-center neutral"><img src="{{ 'ajax-loader.gif' | asset_url }}"></h2></div>').fadeIn();
          }
        })
        .done(function(data) {
			console.log(order);
        })
        .success(function(data) {
            var message = '{{ 'cart.order_success' | t }}';
            //$('#overlay').empty().append('<div id="feedback"><h2 class="text-center neutral">' + message + '</h2></div>');
            feedback(message);
            CartJS.clear();
            $('#cart_display').fadeOut(600);
        })
        .fail(function( xhr, status, errorThrown ) {
            var message = '{{ 'cart.order_fail_manual_way' | t }}';
            feedback(message);
            console.log( "Error: " + errorThrown );
            console.log( "Status: " + status );
            console.dir( xhr );
            $('#manual_order_form').find('#manualStatus').val('La commande n\'a pu être transmise pour la raison suivante: "' + status + ' : ' + errorThrown + '". Un traitement manuel de celle-ci est requis.');
            setTimeout(function(){
                $('#manual_order_form').submit();
            }, 2500);
            $('#cart_display').fadeOut(600);
        })
        // Code to run regardless of success or failure;
        .always(function( xhr, status ) {
          $('#overlayCart').fadeOut(400);
          $('body').css('overflow','');
          CartJS.setAttribute('Mes informations complémentaires', '');
          //setTimeout(function(){CartJS.setAttribute('Mes informations complémentaires', '')}, 2500);
          //$(".content").html(orderJSON);
          //alert( "The request is complete!" );
        });

      console.log(order);
    }

    $('#clientOrderForm').submit(function(event) {

     	event.preventDefault();
      /* Check if extra infos added by client */
          var extra = $('#mes-informations-complementaires').val().replace(/\"/g,'\\').replace(/\*/g,'\\').replace(/\;/g,'\\').replace(/[&]/gi,' and ').replace(/[#]/gi,'').replace(/[éëêè]/gi,'e').replace(/[,]/gi,'');
          /* If customer added extra infos to his order, then wait for process to be done before sending */
            CartJS.setAttribute('Mes informations complémentaires', extra, {
                    "success": function(data, textStatus, jqXHR) {
                      console.log(CartJS.cart.attributes);
                      /* Compensate bug due to framework by double attr update to be sure to get last infos */
                      CartJS.setAttribute('Mes informations complémentaires', extra, {
                              "success": function(data, textStatus, jqXHR) {
                                //alert(extra);
                                console.log(CartJS.cart.attributes);
                                buildOrder();
                              }

                      });
                    }
          });

    });

  </script>

{% include 'cart_manual_form' %}
